// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: module_query.sql

package sqlc

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createModule = `-- name: CreateModule :one
INSERT INTO modules (id, user_id, Name, is_open, icon, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, name, is_open, icon
`

type CreateModuleParams struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	Name      string    `json:"name"`
	IsOpen    bool      `json:"is_open"`
	Icon      string    `json:"icon"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type CreateModuleRow struct {
	ID     uuid.UUID `json:"id"`
	Name   string    `json:"name"`
	IsOpen bool      `json:"is_open"`
	Icon   string    `json:"icon"`
}

func (q *Queries) CreateModule(ctx context.Context, arg CreateModuleParams) (CreateModuleRow, error) {
	row := q.db.QueryRowContext(ctx, createModule,
		arg.ID,
		arg.UserID,
		arg.Name,
		arg.IsOpen,
		arg.Icon,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i CreateModuleRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.IsOpen,
		&i.Icon,
	)
	return i, err
}
